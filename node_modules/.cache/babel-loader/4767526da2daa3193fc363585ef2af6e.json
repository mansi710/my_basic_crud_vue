{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <form @submit.prevent=\\\"CreatePost\\\">\\n      <div>\\n        <label for=\\\"name\\\">User Name</label>\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"name\\\"\\n          v-model=\\\"formData.name\\\"\\n          placeholder=\\\"Enter name\\\"\\n          class=\\\"input\\\"\\n          required\\n        />\\n      </div>\\n      <div>\\n        <label for=\\\"email\\\">User Email</label>\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"email\\\"\\n          v-model=\\\"formData.email\\\"\\n          placeholder=\\\"Enter Email\\\"\\n          class=\\\"input\\\"\\n          required\\n        />\\n      </div>\\n      <div>\\n        <label for=\\\"password\\\">password</label>\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"password\\\"\\n          v-model=\\\"formData.password\\\"\\n          placeholder=\\\"Enter Password\\\"\\n          class=\\\"input\\\"\\n          :class=\\\"{ valid: passwordValidation.valid }\\\"\\n          required\\n        />\\n      </div>\\n      <div>\\n        <label for=\\\"C_pwd\\\">Confirm Password</label>\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"c_password\\\"\\n          v-model=\\\"formData.confirm_password\\\"\\n          placeholder=\\\"Enter Confirm Password\\\"\\n          class=\\\"input\\\"\\n          required\\n        />\\n      </div>\\n      <transition name=\\\"hint\\\" appear>\\n        <div\\n          v-if=\\\"passwordValidation.errors.length > 0 && !submitted\\\"\\n          class=\\\"hints\\\"\\n        >\\n          <h2>Hints</h2>\\n          <p v-for=\\\"error in passwordValidation.errors\\\" :key=\\\"error.id\\\">\\n            {{ error }}\\n          </p>\\n        </div>\\n      </transition>\\n      <div class=\\\"matches\\\" v-if=\\\"notSamePasswords\\\">\\n        <p>Passwords don't match.</p>\\n      </div>\\n      <button class=\\\"btn\\\">Sign Up</button>\\n    </form> \")]);\n}","map":{"version":3,"mappings":";;uBACEA,oBA+DM,KA/DN,EA+DM,IA/DN,EA+DM,CA9DJC,qvDA8DI,CA/DN","names":["_createElementBlock","_createCommentVNode"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/my-vuejs-final/src/views/RegisterC.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <form @submit.prevent=\"CreatePost\">\n      <div>\n        <label for=\"name\">User Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          v-model=\"formData.name\"\n          placeholder=\"Enter name\"\n          class=\"input\"\n          required\n        />\n      </div>\n      <div>\n        <label for=\"email\">User Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          v-model=\"formData.email\"\n          placeholder=\"Enter Email\"\n          class=\"input\"\n          required\n        />\n      </div>\n      <div>\n        <label for=\"password\">password</label>\n        <input\n          type=\"text\"\n          id=\"password\"\n          v-model=\"formData.password\"\n          placeholder=\"Enter Password\"\n          class=\"input\"\n          :class=\"{ valid: passwordValidation.valid }\"\n          required\n        />\n      </div>\n      <div>\n        <label for=\"C_pwd\">Confirm Password</label>\n        <input\n          type=\"text\"\n          id=\"c_password\"\n          v-model=\"formData.confirm_password\"\n          placeholder=\"Enter Confirm Password\"\n          class=\"input\"\n          required\n        />\n      </div>\n      <transition name=\"hint\" appear>\n        <div\n          v-if=\"passwordValidation.errors.length > 0 && !submitted\"\n          class=\"hints\"\n        >\n          <h2>Hints</h2>\n          <p v-for=\"error in passwordValidation.errors\" :key=\"error.id\">\n            {{ error }}\n          </p>\n        </div>\n      </transition>\n      <div class=\"matches\" v-if=\"notSamePasswords\">\n        <p>Passwords don't match.</p>\n      </div>\n      <button class=\"btn\">Sign Up</button>\n    </form> -->\n  </div>\n</template>\n\n<script>\nimport { required, minLength, maxLength, sameAs } from \"vuelidate/lib/validators\";\n// import axios from \"axios\";\n// export default {\n//   name: \"CreatePost\",\n//   data() {\n//     return {\n//       formData: {\n//         // userId: \"\",\n//         name: \"\",\n//         email: \"\",\n//         password: \"\",\n//         confirm_password: \"\",\n//         submitted: false,\n//       },\n//       rules: [\n//         { message: \"One lowercase letter required.\", regex: /[a-z]+/ },\n//         { message: \"One uppercase letter required.\", regex: /[A-Z]+/ },\n//         { message: \"8 characters minimum.\", regex: /.{8,}/ },\n//         { message: \"One number required.\", regex: /[0-9]+/ },\n//       ],\n//     };\n//   },\n//   methods: {\n//     resetPasswords() {\n//       this.formData.password = \"\";\n//       this.formData.confirm_password = \"\";\n//       this.formData.submitted = true;\n//       setTimeout(() => {\n//         this.formData.submitted = false;\n//       }, 2000);\n//     },\n//     CreatePost() {\n//       axios\n//         .post(\"register\", this.formData)\n//         .then((response) => console.log(response))\n//         .catch((error) => console.log(error));\n\n//       this.$router.push({ name: \"apiLogin\" });\n//     },\n//   },\n//   computed: {\n//     notSamePasswords() {\n//       if (this.passwordsFilled) {\n//         return this.formData.password !== this.formData.confirm_password;\n//       } else {\n//         return false;\n//       }\n//     },\n//     passwordsFilled() {\n//       return (\n//         this.formData.password !== \"\" && this.formData.confirm_password !== \"\"\n//       );\n//     },\n//     passwordValidation() {\n//       let errors = [];\n//       for (let condition of this.rules) {\n//         if (!condition.regex.test(this.formData.password)) {\n//           errors.push(condition.message);\n//         }\n//       }\n//       if (errors.length === 0) {\n//         return { valid: true, errors };\n//       } else {\n//         return { valid: false, errors };\n//       }\n//     },\n//   },\n// };\n</script>\n<style>\n.invalid-feedback {\n  color: red;\n}\n.hints {\n  max-width: 400px;\n  padding: 1em;\n  background: whitesmoke;\n  margin: 1em 0;\n  font-size: 0.9em;\n  color: darken(#d4dedf, 50%);\n  h2 {\n    margin: 0.5em 0 0.2em 0;\n  }\n  p {\n    margin: 0;\n    padding-left: 1em;\n    &::before {\n      content: \">\";\n      font-size: 0.9em;\n      margin-right: 6px;\n      display: inline-block;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}