{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"ListOfBlog\",\n\n  data() {\n    return {\n      blogs: [],\n      pagination: {},\n      searchTerm: \"\",\n      blog: \"\",\n      message: \"invalid search\"\n    };\n  },\n\n  mounted() {\n    this.getBlogs();\n  },\n\n  methods: {\n    getBlogs(pagination) {\n      axios.post(`/getAllBlog?page=${pagination}&search=${this.searchTerm}`).then(response => {\n        this.blogs = response.data.filteredBlogs;\n        this.pagination = response.data.blog;\n        console.log(this.searchTerm);\n      }).catch(error => {\n        console.log(error);\n        console.log(\"handle server error from here\");\n        this.blogs = [];\n      });\n    },\n\n    async deleteBlog(id) {\n      if (confirm(\"Are you sure to delete this category ?\")) {\n        await axios.post(`destroyBlog/${id}`).then(response => {\n          this.getBlogs();\n\n          if (response) {\n            alert(\"blog deleted sucessfully\");\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n\n    performSearch() {\n      this.getBlogs();\n    }\n\n  },\n  computed: {\n    filteredBlogs() {\n      if (this.searchTerm) {\n        return this.blogs.filter(blog => blog.body.includes(this.searchTerm));\n      } else {\n        return this.message;\n      }\n    },\n\n    filterData: function () {\n      return this.blogs.filter(searchTerm => {\n        return searchTerm.name.toLowerCase().indexOf(this.searchTerm.toLowerCase()) >= 0 || searchTerm.email.toLowerCase().indexOf(this.searchQuery.toLowerCase()) >= 0 || searchTerm.salary.toLowerCase().indexOf(this.searchQuery.toLowerCase()) >= 0;\n      });\n    } // filteredBlogs: function () {\n    //   return this.blogs.filter((blog) => {\n    //     var searchByTitle = blog.title.match(this.searchTerm);\n    //     var searchByDescription = blog.title.match(this.searchTerm);\n    //     var searchByStatus = blog.status.match(this.searchTerm);\n    //     var searchByTag = blog.tag.match(this.searchTerm);\n    //     var searchByOrder = blog.order.match(this.searchTerm);\n    //     if (searchByTitle) {\n    //       return searchByTitle;\n    //     }\n    //     if (searchByDescription) {\n    //       return searchByDescription;\n    //     }\n    //     if (searchByStatus) {\n    //       return searchByStatus;\n    //     }\n    //     if (searchByTag) {\n    //       return searchByTag;\n    //     }\n    //     if (searchByOrder) {\n    //       return searchByOrder;\n    //     }\n    //     if (this.searchTerm.length == 0 || this.searchTerm == \"\") {\n    //       return (this.message = \"invalid data\");\n    //     }\n    //   });\n    // },\n\n  }\n};","map":{"version":3,"mappings":";AAyKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACbC,IAAI,EAAE,YADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,EADF;MAELC,UAAU,EAAE,EAFP;MAGLC,UAAU,EAAE,EAHP;MAILC,IAAI,EAAE,EAJD;MAKLC,OAAO,EAAE;IALJ,CAAP;EAOD,CAVY;;EAWbC,OAAO,GAAG;IACR,KAAKC,QAAL;EACD,CAbY;;EAcbC,OAAO,EAAE;IACPD,QAAQ,CAACL,UAAD,EAAa;MACnBJ,KAAI,CACDW,IADH,CACS,oBAAmBP,UAAW,WAAU,KAAKC,UAAW,EADjE,EAEGO,IAFH,CAESC,QAAD,IAAc;QAClB,KAAKV,KAAL,GAAaU,QAAQ,CAACX,IAAT,CAAcY,aAA3B;QACA,KAAKV,UAAL,GAAkBS,QAAQ,CAACX,IAAT,CAAcI,IAAhC;QACAS,OAAO,CAACC,GAAR,CAAY,KAAKX,UAAjB;MACD,CANH,EAOGY,KAPH,CAOUC,KAAD,IAAW;QAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;QACAH,OAAO,CAACC,GAAR,CAAY,+BAAZ;QACA,KAAKb,KAAL,GAAa,EAAb;MACD,CAXH;IAYD,CAdM;;IAeP,MAAMgB,UAAN,CAAiBC,EAAjB,EAAqB;MACnB,IAAIC,OAAO,CAAC,wCAAD,CAAX,EAAuD;QACrD,MAAMrB,KAAI,CACPW,IADG,CACG,eAAcS,EAAG,EADpB,EAEHR,IAFG,CAEGC,QAAD,IAAc;UAClB,KAAKJ,QAAL;;UACA,IAAII,QAAJ,EAAc;YACZS,KAAK,CAAC,0BAAD,CAAL;UACF;QACD,CAPG,EAQHL,KARG,CAQIC,KAAD,IAAW;UAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;QACD,CAVG,CAAN;MAWF;IACD,CA7BM;;IA8BPK,aAAa,GAAG;MACd,KAAKd,QAAL;IACD;;EAhCM,CAdI;EAiDbe,QAAQ,EAAE;IACRV,aAAa,GAAG;MACd,IAAI,KAAKT,UAAT,EAAqB;QACnB,OAAO,KAAKF,KAAL,CAAWsB,MAAX,CAAmBnB,IAAD,IAAUA,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,KAAKtB,UAAxB,CAA5B,CAAP;MACF,CAFA,MAEO;QACL,OAAO,KAAKE,OAAZ;MACF;IACD,CAPO;;IAQRqB,UAAU,EAAE,YAAY;MACtB,OAAO,KAAKzB,KAAL,CAAWsB,MAAX,CAAmBpB,UAAD,IAAgB;QACvC,OACEA,UAAU,CAACJ,IAAX,CAAgB4B,WAAhB,GAA8BC,OAA9B,CAAsC,KAAKzB,UAAL,CAAgBwB,WAAhB,EAAtC,KACE,CADF,IAEAxB,UAAU,CAAC0B,KAAX,CAAiBF,WAAjB,GAA+BC,OAA/B,CAAuC,KAAKE,WAAL,CAAiBH,WAAjB,EAAvC,KACE,CAHF,IAIAxB,UAAU,CAAC4B,MAAX,CAAkBJ,WAAlB,GAAgCC,OAAhC,CAAwC,KAAKE,WAAL,CAAiBH,WAAjB,EAAxC,KACE,CANJ;MAQD,CATM,CAAP;IAUD,CAnBO,CAoBR;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EAjDQ;AAjDG,CAAf","names":["axios","name","data","blogs","pagination","searchTerm","blog","message","mounted","getBlogs","methods","post","then","response","filteredBlogs","console","log","catch","error","deleteBlog","id","confirm","alert","performSearch","computed","filter","body","includes","filterData","toLowerCase","indexOf","email","searchQuery","salary"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/my-vuejs-final/src/views/ListOfBlog.vue"],"sourcesContent":["<template>\n  <link\n    href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n    rel=\"stylesheet\"\n    integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n    crossorigin=\"anonymous\"\n  />\n\n  <div class=\"row\">\n    <div class=\"col-12 mb-2 text-end\">\n      <router-link :to=\"{ name: 'apiAddNewBlog' }\" class=\"btn btn-primary\"\n        >Create</router-link\n      >\n    </div>\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4>Blogs List</h4>\n        </div>\n        <div class=\"card-tools\" id=\"search\">\n          <div class=\"input-group input-group-sm\" style=\"width: 250px\">\n            <input\n              name=\"table_search\"\n              class=\"form-control float-right\"\n              placeholder=\"Global Search\"\n              v-model=\"searchTerm\"\n              type=\"search\"\n              aria-label=\"Search\"\n            />\n            <div class=\"input-group-append\">\n              <button type=\"submit\" class=\"btn btn-info\" @click=\"performSearch\">\n                Search\n              </button>\n            </div>\n            <div v-if=\"!searchTerm\">\n              <p class=\"alert alert-danger\">{{ message }}</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Title</th>\n                  <th>Description</th>\n                  <th>Status</th>\n                  <th>Tag</th>\n                  <th>Order</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody v-if=\"blogs\">\n                <tr v-for=\"blog in blogs.data\" :key=\"blog.id\">\n                  <td>{{ blog.id }}</td>\n                  <td>{{ blog.title }}</td>\n                  <td>{{ blog.description }}</td>\n                  <td>{{ blog.status }}</td>\n                  <td>{{ blog.tag }}</td>\n                  <td>{{ blog.order }}</td>\n                  <td>\n                    <router-link\n                      :to=\"{ name: 'apiEditBlog', params: { id: blog.id } }\"\n                      class=\"btn btn-success\"\n                      >Edit</router-link\n                    >\n                    <button\n                      type=\"button\"\n                      @click=\"deleteBlog(blog.id)\"\n                      class=\"btn btn-danger\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n              <tbody v-else>\n                <tr>\n                  <td colspan=\"4\" align=\"center\">No Blogs Found.</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <pagination\n              align=\"center\"\n              :data=\"blogs\"\n              @pagination-change-page=\"list\"\n            ></pagination>\n            <div class=\"row mt-2\">\n              <div class=\"col-md-8\">\n                <nav>\n                  <ul class=\"pagination\">\n                    <li\n                      v-bind:class=\"{ disabled: !pagination.first_page_url }\"\n                      class=\"page-item\"\n                    >\n                      <a\n                        href=\"#\"\n                        class=\"page-link\"\n                        @click=\"getBlogs(pagination.first_page_url)\"\n                        >&laquo;</a\n                      >\n                    </li>\n                    <li\n                      v-bind:class=\"{ disabled: !pagination.prev_page_url }\"\n                      class=\"page-item\"\n                    >\n                      <a\n                        href=\"#\"\n                        class=\"page-link\"\n                        @click=\"getBlogs(pagination.prev_page_url)\"\n                        >&lt;</a\n                      >\n                    </li>\n                    <li\n                      v-for=\"n in pagination.last_page\"\n                      :key=\"n\"\n                      v-bind:class=\"{ active: !pagination.current_page == n }\"\n                      class=\"page-item\"\n                    >\n                      <a href=\"#\" class=\"page-link\" @click=\"getBlogs(n)\">\n                        {{ n }}\n                      </a>\n                    </li>\n                    <li\n                      v-bind:class=\"{ disabled: !pagination.next_page_url }\"\n                      class=\"page-item\"\n                    >\n                      <a\n                        href=\"#\"\n                        class=\"page-link\"\n                        @click=\"getBlogs(pagination.next_page_url)\"\n                        >&gt;</a\n                      >\n                    </li>\n                    <li\n                      v-bind:class=\"{ disabled: !pagination.last_page_url }\"\n                      class=\"page-item\"\n                    >\n                      <a\n                        href=\"#\"\n                        class=\"page-link\"\n                        @click=\"getBlogs(pagination.last_page_url)\"\n                        >&raquo;</a\n                      >\n                    </li>\n                  </ul>\n                </nav>\n              </div>\n              <div class=\"col-md-4\">\n                Page:\n                {{ pagination.from }} to {{ pagination.to }} Total:\n                {{ pagination.total }}\n              </div>\n              <update-profile\n                :data=\"blog\"\n                :show=\"showUpdateModal\"\n                v-on:save=\"updateUser\"\n                v-on:close=\"showUpdateModal = false\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"ListOfBlog\",\n  data() {\n    return {\n      blogs: [],\n      pagination: {},\n      searchTerm: \"\",\n      blog: \"\",\n      message: \"invalid search\",\n    };\n  },\n  mounted() {\n    this.getBlogs();\n  },\n  methods: {\n    getBlogs(pagination) {\n      axios\n        .post(`/getAllBlog?page=${pagination}&search=${this.searchTerm}`)\n        .then((response) => {\n          this.blogs = response.data.filteredBlogs;\n          this.pagination = response.data.blog;\n          console.log(this.searchTerm);\n        })\n        .catch((error) => {\n          console.log(error);\n          console.log(\"handle server error from here\");\n          this.blogs = [];\n        });\n    },\n    async deleteBlog(id) {\n      if (confirm(\"Are you sure to delete this category ?\")) {\n        await axios\n          .post(`destroyBlog/${id}`)\n          .then((response) => {\n            this.getBlogs();\n            if (response) {\n              alert(\"blog deleted sucessfully\");\n            }\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n    performSearch() {\n      this.getBlogs();\n    },\n  },\n\n  computed: {\n    filteredBlogs() {\n      if (this.searchTerm) {\n        return this.blogs.filter((blog) => blog.body.includes(this.searchTerm));\n      } else {\n        return this.message;\n      }\n    },\n    filterData: function () {\n      return this.blogs.filter((searchTerm) => {\n        return (\n          searchTerm.name.toLowerCase().indexOf(this.searchTerm.toLowerCase()) >=\n            0 ||\n          searchTerm.email.toLowerCase().indexOf(this.searchQuery.toLowerCase()) >=\n            0 ||\n          searchTerm.salary.toLowerCase().indexOf(this.searchQuery.toLowerCase()) >=\n            0\n        );\n      });\n    },\n    // filteredBlogs: function () {\n    //   return this.blogs.filter((blog) => {\n    //     var searchByTitle = blog.title.match(this.searchTerm);\n    //     var searchByDescription = blog.title.match(this.searchTerm);\n    //     var searchByStatus = blog.status.match(this.searchTerm);\n    //     var searchByTag = blog.tag.match(this.searchTerm);\n    //     var searchByOrder = blog.order.match(this.searchTerm);\n\n    //     if (searchByTitle) {\n    //       return searchByTitle;\n    //     }\n\n    //     if (searchByDescription) {\n    //       return searchByDescription;\n    //     }\n\n    //     if (searchByStatus) {\n    //       return searchByStatus;\n    //     }\n    //     if (searchByTag) {\n    //       return searchByTag;\n    //     }\n    //     if (searchByOrder) {\n    //       return searchByOrder;\n    //     }\n    //     if (this.searchTerm.length == 0 || this.searchTerm == \"\") {\n    //       return (this.message = \"invalid data\");\n    //     }\n    //   });\n    // },\n  },\n};\n</script>\n<style scoped>\n#search {\n  margin-top: 20px;\n  margin-left: 1200px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}