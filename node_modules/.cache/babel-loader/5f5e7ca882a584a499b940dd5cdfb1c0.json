{"ast":null,"code":"export default {\n  //   name: \"categories\",\n  data() {\n    return {\n      blogs: []\n    };\n  },\n\n  mounted() {\n    this.getBlogs();\n  },\n\n  methods: {\n    async getBlogs() {\n      await this.axios.get(\"/getAllBlog\").then(response => {\n        this.blogs = response.data;\n      }).catch(error => {\n        console.log(error);\n        this.blogs = [];\n      });\n    } // deleteCategory(id) {\n    //   if (confirm(\"Are you sure to delete this category ?\")) {\n    //     this.axios\n    //       .delete(`/api/category/${id}`)\n    //       .then((response) => {\n    //         this.getCategories();\n    //       })\n    //       .catch((error) => {\n    //         console.log(error);\n    //       });\n    //   }\n    // },\n\n\n  }\n};","map":{"version":3,"mappings":"AAyDA,eAAe;EACf;EACEA,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE;IADF,CAAP;EAGD,CANY;;EAObC,OAAO,GAAG;IACR,KAAKC,QAAL;EACD,CATY;;EAUbC,OAAO,EAAE;IACP,MAAMD,QAAN,GAAiB;MACf,MAAM,KAAKE,KAAL,CACHC,GADG,CACC,aADD,EAEHC,IAFG,CAEGC,QAAD,IAAc;QAClB,KAAKP,KAAL,GAAaO,QAAQ,CAACR,IAAtB;MACD,CAJG,EAKHS,KALG,CAKIC,KAAD,IAAW;QAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;QACA,KAAKT,KAAL,GAAa,EAAb;MACD,CARG,CAAN;IASD,CAXM,CAYP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EAvBO;AAVI,CAAf","names":["data","blogs","mounted","getBlogs","methods","axios","get","then","response","catch","error","console","log"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/my-vuejs-final/src/views/ListOfBlog.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-12 mb-2 text-end\">\n      <router-link :to=\"{ name: 'apiAddNewBlog' }\" class=\"btn btn-primary\"\n        >Create</router-link\n      >\n    </div>\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4>Category</h4>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Title</th>\n                  <th>Description</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody v-if=\"categories.length > 0\">\n                <tr v-for=\"(category, key) in categories\" :key=\"key\">\n                  <td>{{ category.id }}</td>\n                  <td>{{ category.title }}</td>\n                  <td>{{ category.description }}</td>\n                  <td>\n                    <router-link\n                      :to=\"{ name: 'categoryEdit', params: { id: category.id } }\"\n                      class=\"btn btn-success\"\n                      >Edit</router-link\n                    >\n                    <button\n                      type=\"button\"\n                      @click=\"deleteCategory(category.id)\"\n                      class=\"btn btn-danger\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n              <tbody v-else>\n                <tr>\n                  <td colspan=\"4\" align=\"center\">No Categories Found.</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n//   name: \"categories\",\n  data() {\n    return {\n      blogs: [],\n    };\n  },\n  mounted() {\n    this.getBlogs();\n  },\n  methods: {\n    async getBlogs() {\n      await this.axios\n        .get(\"/getAllBlog\")\n        .then((response) => {\n          this.blogs = response.data;\n        })\n        .catch((error) => {\n          console.log(error);\n          this.blogs = [];\n        });\n    },\n    // deleteCategory(id) {\n    //   if (confirm(\"Are you sure to delete this category ?\")) {\n    //     this.axios\n    //       .delete(`/api/category/${id}`)\n    //       .then((response) => {\n    //         this.getCategories();\n    //       })\n    //       .catch((error) => {\n    //         console.log(error);\n    //       });\n    //   }\n    // },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}