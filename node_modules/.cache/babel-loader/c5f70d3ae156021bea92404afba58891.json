{"ast":null,"code":"// import { required, minLength, maxLength, sameAs } from \"vuelidate/lib/validators\";\nimport axios from \"axios\"; // import ValidationError from \"@/components/ValidationError.vue\";\n\nexport default {\n  name: \"CreatePost\",\n\n  data() {\n    return {\n      // components: { ValidationError },\n      // validationErrors: \"\",\n      formData: {\n        // userId: \"\",\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirm_password: \"\" // submitted: false,\n\n      },\n      notifmsg: \"\",\n      rules: \"\" // rules: [\n      //   // { message: \"One lowercase letter required.\", regex: /[a-z]+/ },\n      //   // { message: \"One uppercase letter required.\", regex: /[A-Z]+/ },\n      //   { message: \"8 characters minimum.\", regex: /.{8,}/ },\n      //   { message: \"number required.\", regex: /[0-9]+/ },\n      // ],\n\n    };\n  },\n\n  methods: {\n    CreatePost() {\n      axios.post(\"register\", this.formData).then(response => {\n        if (response.status == 200) {\n          alert(\"sucess\");\n          this.$router.push({\n            name: \"apiLogin\"\n          });\n        }\n      }).catch(error => {\n        if (error.response.status == 422) {\n          console.log(error.response.data);\n          this.notifmsg = error.response.data;\n        }\n\n        if (error.response.status == 401) {\n          console.log(error.response.data);\n          this.rules = error.response.data.confirmationError;\n        }\n      }); // this.$router.push({ name: \"apiLogin\" });\n    }\n\n  } // computed: {\n  //   notSamePasswords() {\n  //     if (this.passwordsFilled) {\n  //       return this.formData.password !== this.formData.confirm_password;\n  //     } else {\n  //       return false;\n  //     }\n  //   },\n  //   passwordsFilled() {\n  //     return (\n  //       this.formData.password !== \"\" && this.formData.confirm_password !== \"\"\n  //     );\n  //   },\n  //   passwordValidation() {\n  //     let errors = [];\n  //     for (let condition of this.rules) {\n  //       if (!condition.regex.test(this.formData.password)) {\n  //         errors.push(condition.message);\n  //       }\n  //       // return { $router({ name:\"apiLogin\"}) };\n  //     }\n  //     if (errors.length === 0) {\n  //       return { valid: true, errors };\n  //     } else {\n  //       return { valid: false, errors };\n  //     }\n  //   },\n  // },\n\n};","map":{"version":3,"mappings":"AAmHA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,eAAe;EACbC,IAAI,EAAE,YADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACL;MACA;MACAC,QAAQ,EAAE;QACR;QACAF,IAAI,EAAE,EAFE;QAGRG,KAAK,EAAE,EAHC;QAIRC,QAAQ,EAAE,EAJF;QAKRC,gBAAgB,EAAE,EALV,CAMR;;MANQ,CAHL;MAWLC,QAAQ,EAAE,EAXL;MAYLC,KAAK,EAAE,EAZF,CAaL;MACA;MACA;MACA;MACA;MACA;;IAlBK,CAAP;EAoBD,CAvBY;;EAwBbC,OAAO,EAAE;IACPC,UAAU,GAAG;MACXV,KAAI,CACDW,IADH,CACQ,UADR,EACoB,KAAKR,QADzB,EAEGS,IAFH,CAESC,QAAD,IAAc;QAClB,IAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;UAC1BC,KAAK,CAAC,QAAD,CAAL;UACA,KAAKC,OAAL,CAAaC,IAAb,CAAkB;YAAEhB,IAAI,EAAE;UAAR,CAAlB;QACF;MACD,CAPH,EAQGiB,KARH,CAQUC,KAAD,IAAW;QAChB,IAAIA,KAAK,CAACN,QAAN,CAAeC,MAAf,IAAyB,GAA7B,EAAkC;UAChCM,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACN,QAAN,CAAeX,IAA3B;UACA,KAAKK,QAAL,GAAgBY,KAAK,CAACN,QAAN,CAAeX,IAA/B;QACF;;QACA,IAAIiB,KAAK,CAACN,QAAN,CAAeC,MAAf,IAAyB,GAA7B,EAAkC;UAChCM,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACN,QAAN,CAAeX,IAA3B;UACA,KAAKM,KAAL,GAAaW,KAAK,CAACN,QAAN,CAAeX,IAAf,CAAoBoB,iBAAjC;QACF;MACD,CAjBH,EADW,CAoBX;IACD;;EAtBM,CAxBI,CAgDb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AA3Ea,CAAf","names":["axios","name","data","formData","email","password","confirm_password","notifmsg","rules","methods","CreatePost","post","then","response","status","alert","$router","push","catch","error","console","log","confirmationError"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/my-vuejs-final/src/views/RegisterC.vue"],"sourcesContent":["<template>\n  <link\n    href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n    rel=\"stylesheet\"\n    integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n    crossorigin=\"anonymous\"\n  />\n  <div class=\"container\">\n    <form @submit.prevent=\"CreatePost\" id=\"page\">\n      <div class=\"container\"></div>\n      <div class=\"card-header\">\n        <h4>Register</h4>\n      </div>\n      <div class=\"form-group row\">\n        <!-- <validation-errors\n          :errors=\"validationErrors\"\n          class=\"alert alert-danger\"\n          v-if=\"validationErrors\"\n          id=\"err\"\n        >\n          {{ validationErrors }}\n        </validation-errors> -->\n        <div>\n          <div v-for=\"(errorArray, idx) in notifmsg\" :key=\"idx\">\n            <div\n              v-for=\"(allErrors, idx) in errorArray\"\n              :key=\"idx\"\n              class=\"alert alert-danger\"\n            >\n              {{ allErrors }}\n            </div>\n          </div>\n        </div>\n\n        <div v-else class=\"alert alert-danger\">\n          {{ notifmsg }}\n        </div>\n      </div>\n      <br />\n      <div class=\"form-group row\">\n        <label for=\"name\" class=\"col-sm-2 col-form-label\">\n          Enter User Name\n        </label>\n        <div class=\"col-sm-8\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"enter your name\"\n            v-model=\"formData.name\"\n          />\n        </div>\n      </div>\n      <br />\n      <div class=\"form-group row\">\n        <label for=\"email\" class=\"col-sm-2 col-form-label\"> Enter Email </label>\n        <div class=\"col-sm-8\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"enter your email\"\n            v-model=\"formData.email\"\n          />\n        </div>\n      </div>\n      <br />\n      <div class=\"form-group row\">\n        <label for=\"pwd\" class=\"col-sm-2 col-form-label\">Enter Password </label>\n        <div class=\"col-sm-8\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"pwd\"\n            placeholder=\"enter your password\"\n            v-model=\"formData.password\"\n          />\n        </div>\n      </div>\n      <br />\n      <div class=\"form-group row\">\n        <label for=\"c_pwd\" class=\"col-sm-2 col-form-label\">\n          Enter Confirm Password\n        </label>\n        <div class=\"col-sm-8\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"c_pwd\"\n            placeholder=\"Enter Confirm Password\"\n            v-model=\"formData.confirm_password\"\n          />\n        </div>\n      </div>\n      <br />\n      <!-- <p v-for=\"error in passwordValidation.errors\" :key=\"error.id\">\n        {{ error }}\n      </p> -->\n      <!-- <transition name=\"hint\" appear>\n        <div\n          v-if=\"passwordValidation.errors.length > 0 && !submitted\"\n          class=\"hints\"\n        ></div>\n      </transition> -->\n      <div class=\"matches\" v-if=\"notSamePasswords\">\n        <p>Passwords don't match.</p>\n      </div>\n      <div class=\"form-group row\">\n        <div class=\"col-sm-10\">\n          <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n// import { required, minLength, maxLength, sameAs } from \"vuelidate/lib/validators\";\nimport axios from \"axios\";\n// import ValidationError from \"@/components/ValidationError.vue\";\nexport default {\n  name: \"CreatePost\",\n  data() {\n    return {\n      // components: { ValidationError },\n      // validationErrors: \"\",\n      formData: {\n        // userId: \"\",\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirm_password: \"\",\n        // submitted: false,\n      },\n      notifmsg: \"\",\n      rules: \"\",\n      // rules: [\n      //   // { message: \"One lowercase letter required.\", regex: /[a-z]+/ },\n      //   // { message: \"One uppercase letter required.\", regex: /[A-Z]+/ },\n      //   { message: \"8 characters minimum.\", regex: /.{8,}/ },\n      //   { message: \"number required.\", regex: /[0-9]+/ },\n      // ],\n    };\n  },\n  methods: {\n    CreatePost() {\n      axios\n        .post(\"register\", this.formData)\n        .then((response) => {\n          if (response.status == 200) {\n            alert(\"sucess\");\n            this.$router.push({ name: \"apiLogin\" });\n          }\n        })\n        .catch((error) => {\n          if (error.response.status == 422) {\n            console.log(error.response.data);\n            this.notifmsg = error.response.data;\n          }\n          if (error.response.status == 401) {\n            console.log(error.response.data);\n            this.rules = error.response.data.confirmationError;\n          }\n        });\n\n      // this.$router.push({ name: \"apiLogin\" });\n    },\n  },\n  // computed: {\n  //   notSamePasswords() {\n  //     if (this.passwordsFilled) {\n  //       return this.formData.password !== this.formData.confirm_password;\n  //     } else {\n  //       return false;\n  //     }\n  //   },\n  //   passwordsFilled() {\n  //     return (\n  //       this.formData.password !== \"\" && this.formData.confirm_password !== \"\"\n  //     );\n  //   },\n  //   passwordValidation() {\n  //     let errors = [];\n  //     for (let condition of this.rules) {\n  //       if (!condition.regex.test(this.formData.password)) {\n  //         errors.push(condition.message);\n  //       }\n  //       // return { $router({ name:\"apiLogin\"}) };\n  //     }\n  //     if (errors.length === 0) {\n  //       return { valid: true, errors };\n  //     } else {\n  //       return { valid: false, errors };\n  //     }\n  //   },\n  // },\n};\n</script>\n<style>\n.invalid-feedback {\n  color: red;\n}\n.hints {\n  max-width: 400px;\n  padding: 1em;\n  background: whitesmoke;\n  margin: 1em 0;\n  font-size: 0.9em;\n  color: darken(#d4dedf, 50%);\n  h2 {\n    margin: 0.5em 0 0.2em 0;\n  }\n  p {\n    margin: 0;\n    padding-left: 1em;\n    &::before {\n      content: \">\";\n      font-size: 0.9em;\n      margin-right: 6px;\n      display: inline-block;\n    }\n  }\n}\n#page {\n  margin-top: 100px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}