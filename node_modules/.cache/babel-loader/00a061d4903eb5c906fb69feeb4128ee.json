{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"User Name\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"Country Dial Code\"\n}, \"Password\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  key: 0\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn\"\n}, \"Login\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.CreatePost && $options.CreatePost(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.data.email = $event),\n    class: \"input\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.data.email]])]), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.data.password = $event),\n    class: \"input\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.data.password]])]), _ctx.erros ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.errors) + \" asdasc\", 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), _hoisted_4, _hoisted_5, _createCommentVNode(\" <button class=\\\"btn\\\">Forot Password</button> \")], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":";;gCAIQA,oBAAoC,OAApC,EAAoC;EAA7BC,GAAG,EAAC;AAAyB,CAApC,EAAmB,WAAnB,EAA4B;AAAA;AAA5B;;gCAIAD,oBAA+C,OAA/C,EAA+C;EAAxCC,GAAG,EAAC;AAAoC,CAA/C,EAA+B,UAA/B,EAAuC;AAAA;AAAvC;;;;;;gCASFD,oBAAkC,QAAlC,EAAkC;EAA1BE,KAAK,EAAC;AAAoB,CAAlC,EAAoB,OAApB,EAAyB;AAAA;AAAzB;;gCAAkCF,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;;uBAhBtCG,oBAmBM,KAnBN,EAmBM,IAnBN,EAmBM,CAlBJH,oBAiBO,MAjBP,EAiBO;IAjBAI,QAAM,wDAAUC,mDAAV,EAAoB,WAApB;EAiBN,CAjBP,GACEL,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFJM,UAEI,kBADJN,oBAAmE,OAAnE,EAAmE;IAA5DO,IAAI,EAAC,MAAuD;IAAhDC,EAAE,EAAC,OAA6C;+DAA5BC,WAAKC,QAAKC,OAAkB;IAAhBT,KAAK,EAAC;EAAU,CAAnE;;EAAA,kBAAuCO,WAAKC,QACxC,CAHN,GAIAV,oBAQM,KARN,EAQM,IARN,EAQM,CAPJY,UAOI,kBANJZ,oBAKE,OALF,EAKE;IAJAO,IAAI,EAAC,MAIL;IAHAC,EAAE,EAAC,UAGH;+DAFSC,WAAKI,WAAQF,OAEtB;IADAT,KAAK,EAAC;EACN,CALF;;EAAA,kBAGWO,WAAKI,WAGZ,CARN,GASWC,4BAAXX,oBAA2C,KAA3C,EAA2CY,UAA3C,EAA2CC,iBAAtBF,WAAsB,IAAb,SAA9B,EAAqC;EAAA;EAArC,wCACAG,YAAkCC,YAClCC,uEAhBF;;EAAA,CAkBI,CAnBN","names":["_createElementVNode","for","class","_createElementBlock","onSubmit","$options","_hoisted_1","type","id","$data","email","$event","_hoisted_2","password","_ctx","_hoisted_3","_toDisplayString","_hoisted_4","_hoisted_5","_createCommentVNode"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/my-vuejs-final/src/views/LoginC.vue"],"sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"CreatePost\">\n      <div>\n        <label for=\"email\">User Name</label>\n        <input type=\"text\" id=\"email\" v-model=\"data.email\" class=\"input\" />\n      </div>\n      <div>\n        <label for=\"Country Dial Code\">Password</label>\n        <input\n          type=\"text\"\n          id=\"password\"\n          v-model=\"data.password\"\n          class=\"input\"\n        />\n      </div>\n      <div v-if=\"erros\">{{ errors }} asdasc</div>\n      <button class=\"btn\">Login</button><br />\n      <!-- <button class=\"btn\">Forot Password</button> -->\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"CreatePost\",\n  data() {\n    return {\n      data: {\n        // userId: \"\",\n        email: \"\",\n        password: \"\",\n      },\n      rules:[\n        \n      ],\n    };\n  },\n  methods: {\n    // async CreatePost() {\n    //   const response = await axios.post(\"login\", {\n    //     email: this.data.email,\n    //     password: this.data.password,\n    //   });\n    //   localStorage.setItem(\"token\", response.data.access_token);\n    //   console.log(this.$router.push({ name: \"home\" }));\n    //   this.$router.push({ name: \"home\" });\n\n    //   // try {\n    //   //   axios.post(\"login\").then((response) => {\n    //   //     localStorage.setItem(\"token\", response.data.access_token);\n    //   //     this.$router.push({ name: \"home\" });\n    //   //   });\n    //   // } catch (e) {\n    //   //   this.error = \"invalid user name or password\";\n    //   // }\n    // },\n\n    CreatePost() {\n      axios\n        .post(\"login\", this.data)\n        .then((response) =>\n          localStorage.setItem(\"token\", response.data.access_token)\n        )\n        .catch(alert(this.data.errors));\n    },\n  },\n  computed: {\n    loginCrentials() {\n      let errors = [];\n      for (let condition of this.rules) {\n        if (!condition.regex.test(this.formData.password)) {\n          errors.push(condition.message);\n        }\n        // return { $router({ name:\"apiLogin\"}) };\n      }\n      if (errors.length === 0) {\n        return { valid: true, errors };\n      } else {\n        return { valid: false, errors };\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}