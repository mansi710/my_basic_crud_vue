{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"ListOfBlog\",\n\n  data() {\n    return {\n      blogs: [],\n      pagination: {},\n      searchTerm: \"\",\n      blog: new Blog()\n    };\n  },\n\n  mounted() {\n    this.getBlogs();\n  },\n\n  methods: {\n    getBlogs(pagination) {\n      axios.post(`/getAllBlog?q=${this.searchTerm}&page=${pagination}`).then(response => {\n        this.blogs = response.data.blog;\n        this.pagination = response.data.blog;\n        this.searchTerm = response.data.blog;\n      }).catch(error => {\n        console.log(error);\n        console.log(\"handle server error from here\");\n        this.blogs = [];\n      });\n    },\n\n    async deleteBlog(id) {\n      if (confirm(\"Are you sure to delete this category ?\")) {\n        await axios.post(`destroyBlog/${id}`).then(response => {\n          this.getBlogs();\n\n          if (response) {\n            alert(\"blog deleted sucessfully\");\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }\n\n  },\n  computed: {\n    filteredUsers: function () {\n      return this.blogs.filter(blog => {\n        var searchByTitle = blog.title.match(this.searchTerm.toLowerCase());\n        var searchByDescription = blog.title.match(this.searchTerm.toLowerCase());\n        var searchByStatus = blog.status.match(this.searchTerm.toLowerCase());\n        var searchByTag = blog.tag.match(this.searchTerm.toLowerCase());\n        var searchByOrder = blog.order.match(this.searchTerm.toLowerCase());\n\n        if (searchByTitle) {\n          return searchByTitle;\n        }\n\n        if (searchByDescription) {\n          return searchByDescription;\n        }\n\n        if (searchByStatus) {\n          return searchByStatus;\n        }\n\n        if (searchByTag) {\n          return searchByTag;\n        }\n\n        if (searchByOrder) {\n          return searchByOrder;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA8JA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACbC,IAAI,EAAE,YADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,EADF;MAELC,UAAU,EAAE,EAFP;MAGLC,UAAU,EAAE,EAHP;MAILC,IAAI,EAAE,IAAIC,IAAJ;IAJD,CAAP;EAMD,CATY;;EAUbC,OAAO,GAAG;IACR,KAAKC,QAAL;EACD,CAZY;;EAabC,OAAO,EAAE;IACPD,QAAQ,CAACL,UAAD,EAAa;MACnBJ,KAAI,CACDW,IADH,CACS,iBAAgB,KAAKN,UAAW,SAAQD,UAAW,EAD5D,EAEGQ,IAFH,CAESC,QAAD,IAAc;QAClB,KAAKV,KAAL,GAAaU,QAAQ,CAACX,IAAT,CAAcI,IAA3B;QACA,KAAKF,UAAL,GAAkBS,QAAQ,CAACX,IAAT,CAAcI,IAAhC;QACA,KAAKD,UAAL,GAAkBQ,QAAQ,CAACX,IAAT,CAAcI,IAAhC;MACD,CANH,EAOGQ,KAPH,CAOUC,KAAD,IAAW;QAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;QACAC,OAAO,CAACC,GAAR,CAAY,+BAAZ;QACA,KAAKd,KAAL,GAAa,EAAb;MACD,CAXH;IAYD,CAdM;;IAeP,MAAMe,UAAN,CAAiBC,EAAjB,EAAqB;MACnB,IAAIC,OAAO,CAAC,wCAAD,CAAX,EAAuD;QACrD,MAAMpB,KAAI,CACPW,IADG,CACG,eAAcQ,EAAG,EADpB,EAEHP,IAFG,CAEGC,QAAD,IAAc;UAClB,KAAKJ,QAAL;;UACA,IAAII,QAAJ,EAAc;YACZQ,KAAK,CAAC,0BAAD,CAAL;UACF;QACD,CAPG,EAQHP,KARG,CAQIC,KAAD,IAAW;UAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;QACD,CAVG,CAAN;MAWF;IACD;;EA7BM,CAbI;EA6CbO,QAAQ,EAAE;IACRC,aAAa,EAAE,YAAY;MACzB,OAAO,KAAKpB,KAAL,CAAWqB,MAAX,CAAmBlB,IAAD,IAAU;QACjC,IAAImB,aAAY,GAAInB,IAAI,CAACoB,KAAL,CAAWC,KAAX,CAAiB,KAAKtB,UAAL,CAAgBuB,WAAhB,EAAjB,CAApB;QACA,IAAIC,mBAAkB,GAAIvB,IAAI,CAACoB,KAAL,CAAWC,KAAX,CAAiB,KAAKtB,UAAL,CAAgBuB,WAAhB,EAAjB,CAA1B;QACA,IAAIE,cAAa,GAAIxB,IAAI,CAACyB,MAAL,CAAYJ,KAAZ,CAAkB,KAAKtB,UAAL,CAAgBuB,WAAhB,EAAlB,CAArB;QACA,IAAII,WAAU,GAAI1B,IAAI,CAAC2B,GAAL,CAASN,KAAT,CAAe,KAAKtB,UAAL,CAAgBuB,WAAhB,EAAf,CAAlB;QACA,IAAIM,aAAY,GAAI5B,IAAI,CAAC6B,KAAL,CAAWR,KAAX,CAAiB,KAAKtB,UAAL,CAAgBuB,WAAhB,EAAjB,CAApB;;QAEA,IAAIH,aAAJ,EAAmB;UACjB,OAAOA,aAAP;QACF;;QAEA,IAAII,mBAAJ,EAAyB;UACvB,OAAOA,mBAAP;QACF;;QAEA,IAAIC,cAAJ,EAAoB;UAClB,OAAOA,cAAP;QACF;;QACA,IAAIE,WAAJ,EAAiB;UACf,OAAOA,WAAP;QACF;;QACA,IAAIE,aAAJ,EAAmB;UACjB,OAAOA,aAAP;QACF;MACD,CAxBM,CAAP;IAyBD;EA3BO;AA7CG,CAAf","names":["axios","name","data","blogs","pagination","searchTerm","blog","Blog","mounted","getBlogs","methods","post","then","response","catch","error","console","log","deleteBlog","id","confirm","alert","computed","filteredUsers","filter","searchByTitle","title","match","toLowerCase","searchByDescription","searchByStatus","status","searchByTag","tag","searchByOrder","order"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/my-vuejs-final/src/views/ListOfBlog.vue"],"sourcesContent":["<template>\n  <link\n    href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n    rel=\"stylesheet\"\n    integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n    crossorigin=\"anonymous\"\n  />\n\n  <div class=\"row\">\n    <div class=\"col-12 mb-2 text-end\">\n      <router-link :to=\"{ name: 'apiAddNewBlog' }\" class=\"btn btn-primary\"\n        >Create</router-link\n      >\n    </div>\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4>Blogs List</h4>\n        </div>\n        <div class=\"card-tools\" id=\"search\">\n          <div class=\"input-group input-group-sm\" style=\"width: 250px\">\n            <input\n              name=\"table_search\"\n              class=\"form-control float-right\"\n              placeholder=\"Global Search\"\n              v-model=\"searchTerm\"\n              type=\"search\"\n              aria-label=\"Search\"\n            />\n            <div class=\"input-group-append\">\n              <button type=\"submit\" class=\"btn btn-info\" @click=\"getBlogs\">Search</button>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Title</th>\n                  <th>Description</th>\n                  <th>Status</th>\n                  <th>Tag</th>\n                  <th>Order</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody v-if=\"blogs\">\n                <tr v-for=\"blog in blogs.data\" :key=\"blog.id\">\n                  <td>{{ blog.id }}</td>\n                  <td>{{ blog.title }}</td>\n                  <td>{{ blog.description }}</td>\n                  <td>{{ blog.status }}</td>\n                  <td>{{ blog.tag }}</td>\n                  <td>{{ blog.order }}</td>\n                  <td>\n                    <router-link\n                      :to=\"{ name: 'apiEditBlog', params: { id: blog.id } }\"\n                      class=\"btn btn-success\"\n                      >Edit</router-link\n                    >\n                    <button\n                      type=\"button\"\n                      @click=\"deleteBlog(blog.id)\"\n                      class=\"btn btn-danger\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n              <tbody v-else>\n                <tr>\n                  <td colspan=\"4\" align=\"center\">No Blogs Found.</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <pagination\n              align=\"center\"\n              :data=\"blogs\"\n              @pagination-change-page=\"list\"\n            ></pagination>\n            <div class=\"row mt-2\">\n              <div class=\"col-md-8\">\n                <nav>\n                  <ul class=\"pagination\">\n                    <li\n                      v-bind:class=\"{ disabled: !pagination.first_page_url }\"\n                      class=\"page-item\"\n                    >\n                      <a\n                        href=\"#\"\n                        class=\"page-link\"\n                        @click=\"getBlogs(pagination.first_page_url)\"\n                        >&laquo;</a\n                      >\n                    </li>\n                    <li\n                      v-bind:class=\"{ disabled: !pagination.prev_page_url }\"\n                      class=\"page-item\"\n                    >\n                      <a\n                        href=\"#\"\n                        class=\"page-link\"\n                        @click=\"getBlogs(pagination.prev_page_url)\"\n                        >&lt;</a\n                      >\n                    </li>\n                    <li\n                      v-for=\"n in pagination.last_page\"\n                      :key=\"n\"\n                      v-bind:class=\"{ active: !pagination.current_page == n }\"\n                      class=\"page-item\"\n                    >\n                      <a href=\"#\" class=\"page-link\" @click=\"getBlogs(n)\">\n                        {{ n }}\n                      </a>\n                    </li>\n                    <li\n                      v-bind:class=\"{ disabled: !pagination.next_page_url }\"\n                      class=\"page-item\"\n                    >\n                      <a\n                        href=\"#\"\n                        class=\"page-link\"\n                        @click=\"getBlogs(pagination.next_page_url)\"\n                        >&gt;</a\n                      >\n                    </li>\n                    <li\n                      v-bind:class=\"{ disabled: !pagination.last_page_url }\"\n                      class=\"page-item\"\n                    >\n                      <a\n                        href=\"#\"\n                        class=\"page-link\"\n                        @click=\"getBlogs(pagination.last_page_url)\"\n                        >&raquo;</a\n                      >\n                    </li>\n                  </ul>\n                </nav>\n              </div>\n              <div class=\"col-md-4\">\n                Page:\n                {{ pagination.from }} to {{ pagination.to }} Total:\n                {{ pagination.total }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"ListOfBlog\",\n  data() {\n    return {\n      blogs: [],\n      pagination: {},\n      searchTerm: \"\",\n      blog: new Blog(),\n    };\n  },\n  mounted() {\n    this.getBlogs();\n  },\n  methods: {\n    getBlogs(pagination) {\n      axios\n        .post(`/getAllBlog?q=${this.searchTerm}&page=${pagination}`)\n        .then((response) => {\n          this.blogs = response.data.blog;\n          this.pagination = response.data.blog;\n          this.searchTerm = response.data.blog;\n        })\n        .catch((error) => {\n          console.log(error);\n          console.log(\"handle server error from here\");\n          this.blogs = [];\n        });\n    },\n    async deleteBlog(id) {\n      if (confirm(\"Are you sure to delete this category ?\")) {\n        await axios\n          .post(`destroyBlog/${id}`)\n          .then((response) => {\n            this.getBlogs();\n            if (response) {\n              alert(\"blog deleted sucessfully\");\n            }\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n  },\n\n  computed: {\n    filteredUsers: function () {\n      return this.blogs.filter((blog) => {\n        var searchByTitle = blog.title.match(this.searchTerm.toLowerCase());\n        var searchByDescription = blog.title.match(this.searchTerm.toLowerCase());\n        var searchByStatus = blog.status.match(this.searchTerm.toLowerCase());\n        var searchByTag = blog.tag.match(this.searchTerm.toLowerCase());\n        var searchByOrder = blog.order.match(this.searchTerm.toLowerCase());\n\n        if (searchByTitle) {\n          return searchByTitle;\n        }\n\n        if (searchByDescription) {\n          return searchByDescription;\n        }\n\n        if (searchByStatus) {\n          return searchByStatus;\n        }\n        if (searchByTag) {\n          return searchByTag;\n        }\n        if (searchByOrder) {\n          return searchByOrder;\n        }\n      });\n    },\n  },\n};\n</script>\n<style scoped>\n#search {\n  margin-top: 20px;\n  margin-left: 1200px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}