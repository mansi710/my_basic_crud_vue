{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"User Name\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"User Email\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"password\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = [\"type\"];\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"C_pwd\"\n}, \"Confirm Password\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn\"\n}, \"Sign Up\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.CreatePost && $options.CreatePost(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.name = $event),\n    placeholder: \"Enter name\",\n    class: \"input\",\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.formData.name]])]), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.email = $event),\n    placeholder: \"Enter Email\",\n    class: \"input\",\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.formData.email]])]), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.formData.password = $event),\n    placeholder: \"Enter Password\",\n    class: _normalizeClass({\n      valid: $options.passwordValidation.valid\n    }),\n    required: \"\"\n  }, null, 10\n  /* CLASS, PROPS */\n  , _hoisted_4), [[_vModelText, $data.formData.password]])]), _createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"c_password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.formData.confirm_password = $event),\n    placeholder: \"Enter Confirm Password\",\n    class: \"input\",\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.formData.confirm_password]])]), _hoisted_6], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":";;gCAIQA,oBAAmC,OAAnC,EAAmC;EAA5BC,GAAG,EAAC;AAAwB,CAAnC,EAAkB,WAAlB,EAA2B;AAAA;AAA3B;;gCAWAD,oBAAqC,OAArC,EAAqC;EAA9BC,GAAG,EAAC;AAA0B,CAArC,EAAmB,YAAnB,EAA6B;AAAA;AAA7B;;gCAWAD,oBAAsC,OAAtC,EAAsC;EAA/BC,GAAG,EAAC;AAA2B,CAAtC,EAAsB,UAAtB,EAA8B;AAAA;AAA9B;;;;gCAYAD,oBAA2C,OAA3C,EAA2C;EAApCC,GAAG,EAAC;AAAgC,CAA3C,EAAmB,kBAAnB,EAAmC;AAAA;AAAnC;;gCAUFD,oBAAoC,QAApC,EAAoC;EAA5BE,KAAK,EAAC;AAAsB,CAApC,EAAoB,SAApB,EAA2B;AAAA;AAA3B;;;uBA/CJC,oBAiDM,KAjDN,EAiDM,IAjDN,EAiDM,CAhDJH,oBA+CO,MA/CP,EA+CO;IA/CAI,QAAM,wDAAUC,mDAAV,EAAoB,WAApB;EA+CN,CA/CP,GACEL,oBAUM,KAVN,EAUM,IAVN,EAUM,CATJM,UASI,kBARJN,oBAOE,OAPF,EAOE;IANAO,IAAI,EAAC,MAML;IALAC,EAAE,EAAC,MAKH;+DAJSC,eAASC,OAAIC,OAItB;IAHAC,WAAW,EAAC,YAGZ;IAFAV,KAAK,EAAC,OAEN;IADAW,QAAQ,EAAR;EACA,CAPF;;EAAA,kBAGWJ,eAASC,OAKhB,CAVN,GAWAV,oBAUM,KAVN,EAUM,IAVN,EAUM,CATJc,UASI,kBARJd,oBAOE,OAPF,EAOE;IANAO,IAAI,EAAC,MAML;IALAC,EAAE,EAAC,OAKH;+DAJSC,eAASM,QAAKJ,OAIvB;IAHAC,WAAW,EAAC,aAGZ;IAFAV,KAAK,EAAC,OAEN;IADAW,QAAQ,EAAR;EACA,CAPF;;EAAA,kBAGWJ,eAASM,QAKhB,CAVN,GAWAf,oBAWM,KAXN,EAWM,IAXN,EAWM,CAVJgB,UAUI,kBATJhB,oBAQE,OARF,EAQE;IAPAO,IAAI,EAAC,MAOL;IANAC,EAAE,EAAC,UAMH;+DALSC,eAASQ,WAAQN,OAK1B;IAJAC,WAAW,EAAC,gBAIZ;IAHCV,KAAK;MAAAgB,OACEb,4BAAmBa;IADrB,EAGN;IADAL,QAAQ,EAAR;EACA,CARF;;EAAA,8BAGWJ,eAASQ,WAMhB,CAXN,GAYAjB,oBAUM,KAVN,EAUM,IAVN,EAUM,CATJmB,UASI,kBARJnB,oBAOE,OAPF,EAOE;IANAO,IAAI,EAAC,MAML;IALAC,EAAE,EAAC,YAKH;+DAJSC,eAASW,mBAAgBT,OAIlC;IAHAC,WAAW,EAAC,wBAGZ;IAFAV,KAAK,EAAC,OAEN;IADAW,QAAQ,EAAR;EACA,CAPF;;EAAA,kBAGWJ,eAASW,mBAKhB,CAVN,GAWAC,WA9CF;;EAAA,CAgDI,CAjDN","names":["_createElementVNode","for","class","_createElementBlock","onSubmit","$options","_hoisted_1","type","id","$data","name","$event","placeholder","required","_hoisted_2","email","_hoisted_3","password","valid","_hoisted_5","confirm_password","_hoisted_6"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/my-vuejs-final/src/views/RegisterC.vue"],"sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"CreatePost\">\n      <div>\n        <label for=\"name\">User Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          v-model=\"formData.name\"\n          placeholder=\"Enter name\"\n          class=\"input\"\n          required\n        />\n      </div>\n      <div>\n        <label for=\"email\">User Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          v-model=\"formData.email\"\n          placeholder=\"Enter Email\"\n          class=\"input\"\n          required\n        />\n      </div>\n      <div>\n        <label for=\"password\">password</label>\n        <input\n          type=\"text\"\n          id=\"password\"\n          v-model=\"formData.password\"\n          placeholder=\"Enter Password\"\n          :class=\n          '{valid:passwordValidation.valid}' :type=\"passwordVisible ? 'text' : 'password'\"\n          required\n        />\n      </div>\n      <div>\n        <label for=\"C_pwd\">Confirm Password</label>\n        <input\n          type=\"text\"\n          id=\"c_password\"\n          v-model=\"formData.confirm_password\"\n          placeholder=\"Enter Confirm Password\"\n          class=\"input\"\n          required\n        />\n      </div>\n      <button class=\"btn\">Sign Up</button>\n    </form>\n  </div>\n</template>\n\n<script>\n// import { required, minLength, maxLength, sameAs } from \"vuelidate/lib/validators\";\nimport axios from \"axios\";\nexport default {\n  name: \"CreatePost\",\n  data() {\n    return {\n      formData: {\n        // userId: \"\",\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirm_password: \"\",\n        submitted: false,\n      },\n      rules: [\n        { message: \"One lowercase letter required.\", regex: /[a-z]+/ },\n        { message: \"One uppercase letter required.\", regex: /[A-Z]+/ },\n        { message: \"8 characters minimum.\", regex: /.{8,}/ },\n        { message: \"One number required.\", regex: /[0-9]+/ },\n      ],\n    };\n  },\n  methods: {\n    resetPasswords() {\n      this.formData.password = \"\";\n      this.formData.confirm_password = \"\";\n      this.formData.submitted = true;\n      setTimeout(() => {\n        this.formData.submitted = false;\n      }, 2000);\n    },\n    CreatePost() {\n      axios\n        .post(\"register\", this.formData)\n        .then((response) => console.log(response))\n        .catch((error) => console.log(error));\n\n      this.$router.push({ name: \"apiLogin\" });\n    },\n  },\n  computed: {\n    notSamePasswords() {\n      if (this.passwordsFilled) {\n        return this.formData.password !== this.formData.confirm_password;\n      } else {\n        return false;\n      }\n    },\n    passwordsFilled() {\n      return (\n        this.formData.password !== \"\" && this.formData.confirm_password !== \"\"\n      );\n    },\n    passwordValidation() {\n      let errors = [];\n      for (let condition of this.rules) {\n        if (!condition.regex.test(this.formData.password)) {\n          errors.push(condition.message);\n        }\n      }\n      if (errors.length === 0) {\n        return { valid: true, errors };\n      } else {\n        return { valid: false, errors };\n      }\n    },\n  },\n};\n</script>\n<style>\n.invalid-feedback {\n  color: red;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}