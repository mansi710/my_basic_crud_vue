{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"ListOfBlog\",\n\n  data() {\n    return {\n      blogs: []\n    };\n  },\n\n  mounted() {\n    this.getBlogs();\n  },\n\n  methods: {\n    async getBlogs() {\n      await axios.get(\"getAllBlog\").then(response => {\n        this.blogs = response.data;\n      }).catch(error => {\n        console.log(error);\n        this.blogs = [];\n      });\n    },\n\n    async deleteBlog(id) {\n      if (confirm(\"Are you sure to delete this category ?\")) {\n        await axios;\n      } // if (confirm(\"Are you sure to delete this category ?\")) {\n      //   const response = await axios\n      //     .delete(`destroyBlog/${id}`)\n      //     .then((response) => {\n      //       this.getCategories();\n      //     })\n      //     .catch((error) => {\n      //       console.log(error);\n      //     });\n      // }\n\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACbC,IAAI,EAAE,YADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE;IADF,CAAP;EAGD,CANY;;EAObC,OAAO,GAAG;IACR,KAAKC,QAAL;EACD,CATY;;EAUbC,OAAO,EAAE;IACP,MAAMD,QAAN,GAAiB;MACf,MAAML,KAAI,CACPO,GADG,CACC,YADD,EAEHC,IAFG,CAEGC,QAAD,IAAc;QAClB,KAAKN,KAAL,GAAaM,QAAQ,CAACP,IAAtB;MACD,CAJG,EAKHQ,KALG,CAKIC,KAAD,IAAW;QAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;QACA,KAAKR,KAAL,GAAa,EAAb;MACD,CARG,CAAN;IASD,CAXM;;IAYP,MAAMW,UAAN,CAAiBC,EAAjB,EAAqB;MACnB,IAAIC,OAAO,CAAC,wCAAD,CAAX,EAAuD;QACrD,MAAMhB,KAAN;MACF,CAHmB,CAInB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;IACD;;EA1BM;AAVI,CAAf","names":["axios","name","data","blogs","mounted","getBlogs","methods","get","then","response","catch","error","console","log","deleteBlog","id","confirm"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/my-vuejs-final/src/views/ListOfBlog.vue"],"sourcesContent":["<template>\n  <link\n    href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n    rel=\"stylesheet\"\n    integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n    crossorigin=\"anonymous\"\n  />\n\n  <div class=\"row\">\n    <div class=\"col-12 mb-2 text-end\">\n      <router-link :to=\"{ name: 'apiAddNewBlog' }\" class=\"btn btn-primary\"\n        >Create</router-link\n      >\n    </div>\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4>Category</h4>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Title</th>\n                  <th>Description</th>\n                  <th>Status</th>\n                  <th>Tag</th>\n                  <th>Order</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody v-if=\"blogs.length > 0\">\n                <tr v-for=\"blog in blogs\" :key=\"blog.id\">\n                  <td>{{ blog.id }}</td>\n                  <td>{{ blog.title }}</td>\n                  <td>{{ blog.description }}</td>\n                  <td>{{ blog.status }}</td>\n                  <td>{{ blog.tag }}</td>\n                  <td>{{ blog.order }}</td>\n                  <td>\n                    <router-link :to=\"{}\" class=\"btn btn-success\"> Edit </router-link>\n                    <button\n                      type=\"button\"\n                      @click=\"deleteBlog(blog.id)\"\n                      class=\"btn btn-danger\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n              <tbody v-else>\n                <tr>\n                  <td colspan=\"4\" align=\"center\">No Blogs Found.</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"ListOfBlog\",\n  data() {\n    return {\n      blogs: [],\n    };\n  },\n  mounted() {\n    this.getBlogs();\n  },\n  methods: {\n    async getBlogs() {\n      await axios\n        .get(\"getAllBlog\")\n        .then((response) => {\n          this.blogs = response.data;\n        })\n        .catch((error) => {\n          console.log(error);\n          this.blogs = [];\n        });\n    },\n    async deleteBlog(id) {\n      if (confirm(\"Are you sure to delete this category ?\")) {\n        await axios\n      }\n      // if (confirm(\"Are you sure to delete this category ?\")) {\n      //   const response = await axios\n      //     .delete(`destroyBlog/${id}`)\n      //     .then((response) => {\n      //       this.getCategories();\n      //     })\n      //     .catch((error) => {\n      //       console.log(error);\n      //     });\n      // }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}