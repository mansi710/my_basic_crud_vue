{"ast":null,"code":"// import { required, minLength, maxLength, sameAs } from \"vuelidate/lib/validators\";\nimport axios from \"axios\";\nexport default {\n  name: \"CreatePost\",\n\n  data() {\n    return {\n      formData: {\n        // userId: \"\",\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirm_password: \"\"\n      },\n      rules: [{\n        message: \"One lowercase letter required.\",\n        regex: /[a-z]+/\n      }, {\n        message: \"One uppercase letter required.\",\n        regex: /[A-Z]+/\n      }, {\n        message: \"8 characters minimum.\",\n        regex: /.{8,}/\n      }, {\n        message: \"One number required.\",\n        regex: /[0-9]+/\n      }]\n    };\n  },\n\n  methods: {\n    resetPasswords() {\n      this.formData.password = \"\";\n      this.formData.checkPassword = \"\";\n      this.submitted = true;\n      setTimeout(() => {\n        this.submitted = false;\n      }, 2000);\n    },\n\n    CreatePost() {\n      axios.post(\"register\", this.formData).then(response => console.log(response)).catch(error => console.log(error));\n      this.$router.push({\n        name: \"apiLogin\"\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAiDA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACbC,IAAI,EAAE,YADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACR;QACAF,IAAI,EAAE,EAFE;QAGRG,KAAK,EAAE,EAHC;QAIRC,QAAQ,EAAE,EAJF;QAKRC,gBAAgB,EAAE;MALV,CADL;MAQLC,KAAK,EAAE,CACL;QAAEC,OAAO,EAAE,gCAAX;QAA6CC,KAAK,EAAE;MAApD,CADK,EAEL;QAAED,OAAO,EAAE,gCAAX;QAA6CC,KAAK,EAAE;MAApD,CAFK,EAGL;QAAED,OAAO,EAAE,uBAAX;QAAoCC,KAAK,EAAE;MAA3C,CAHK,EAIL;QAAED,OAAO,EAAE,sBAAX;QAAmCC,KAAK,EAAE;MAA1C,CAJK;IARF,CAAP;EAeD,CAlBY;;EAmBbC,OAAO,EAAE;IACPC,cAAc,GAAG;MACf,KAAKR,QAAL,CAAcE,QAAd,GAAyB,EAAzB;MACA,KAAKF,QAAL,CAAcS,aAAd,GAA8B,EAA9B;MACA,KAAKC,SAAL,GAAiB,IAAjB;MACAC,UAAU,CAAC,MAAM;QACf,KAAKD,SAAL,GAAiB,KAAjB;MACD,CAFS,EAEP,IAFO,CAAV;IAGD,CARM;;IASPE,UAAU,GAAG;MACXf,KAAI,CACDgB,IADH,CACQ,UADR,EACoB,KAAKb,QADzB,EAEGc,IAFH,CAESC,QAAD,IAAcC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAFtB,EAGGG,KAHH,CAGUC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAHpB;MAKA,KAAKC,OAAL,CAAaC,IAAb,CAAkB;QAAEvB,IAAI,EAAE;MAAR,CAAlB;IACD;;EAhBM;AAnBI,CAAf","names":["axios","name","data","formData","email","password","confirm_password","rules","message","regex","methods","resetPasswords","checkPassword","submitted","setTimeout","CreatePost","post","then","response","console","log","catch","error","$router","push"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/my-vuejs-final/src/views/RegisterC.vue"],"sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"CreatePost\">\n      <div>\n        <label for=\"name\">User Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          v-model=\"formData.name\"\n          placeholder=\"Enter name\"\n          class=\"input\"\n        />\n      </div>\n      <div>\n        <label for=\"email\">User Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          v-model=\"formData.email\"\n          placeholder=\"Enter Email\"\n          class=\"input\"\n        />\n      </div>\n      <div>\n        <label for=\"password\">password</label>\n        <input\n          type=\"text\"\n          id=\"password\"\n          v-model=\"formData.password\"\n          placeholder=\"Enter Password\"\n          class=\"input\"\n        />\n      </div>\n      <div>\n        <label for=\"C_pwd\">Confirm Password</label>\n        <input\n          type=\"text\"\n          id=\"c_password\"\n          v-model=\"formData.confirm_password\"\n          placeholder=\"Enter Confirm Password\"\n          class=\"input\"\n        />\n      </div>\n      <button class=\"btn\">Sign Up</button>\n    </form>\n  </div>\n</template>\n\n<script>\n// import { required, minLength, maxLength, sameAs } from \"vuelidate/lib/validators\";\nimport axios from \"axios\";\nexport default {\n  name: \"CreatePost\",\n  data() {\n    return {\n      formData: {\n        // userId: \"\",\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirm_password: \"\",\n      },\n      rules: [\n        { message: \"One lowercase letter required.\", regex: /[a-z]+/ },\n        { message: \"One uppercase letter required.\", regex: /[A-Z]+/ },\n        { message: \"8 characters minimum.\", regex: /.{8,}/ },\n        { message: \"One number required.\", regex: /[0-9]+/ },\n      ],\n    };\n  },\n  methods: {\n    resetPasswords() {\n      this.formData.password = \"\";\n      this.formData.checkPassword = \"\";\n      this.submitted = true;\n      setTimeout(() => {\n        this.submitted = false;\n      }, 2000);\n    },\n    CreatePost() {\n      axios\n        .post(\"register\", this.formData)\n        .then((response) => console.log(response))\n        .catch((error) => console.log(error));\n\n      this.$router.push({ name: \"apiLogin\" });\n    },\n  },\n};\n</script>\n<style>\n.invalid-feedback {\n  color: red;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}